//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/features/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	features "k8s.io/kubernetes/pkg/apis/features"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Feature)(nil), (*features.Feature)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Feature_To_features_Feature(a.(*v1alpha1.Feature), b.(*features.Feature), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*features.Feature)(nil), (*v1alpha1.Feature)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_features_Feature_To_v1alpha1_Feature(a.(*features.Feature), b.(*v1alpha1.Feature), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FeatureList)(nil), (*features.FeatureList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FeatureList_To_features_FeatureList(a.(*v1alpha1.FeatureList), b.(*features.FeatureList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*features.FeatureList)(nil), (*v1alpha1.FeatureList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_features_FeatureList_To_v1alpha1_FeatureList(a.(*features.FeatureList), b.(*v1alpha1.FeatureList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FeatureSpec)(nil), (*features.FeatureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FeatureSpec_To_features_FeatureSpec(a.(*v1alpha1.FeatureSpec), b.(*features.FeatureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*features.FeatureSpec)(nil), (*v1alpha1.FeatureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_features_FeatureSpec_To_v1alpha1_FeatureSpec(a.(*features.FeatureSpec), b.(*v1alpha1.FeatureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FeatureStatus)(nil), (*features.FeatureStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FeatureStatus_To_features_FeatureStatus(a.(*v1alpha1.FeatureStatus), b.(*features.FeatureStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*features.FeatureStatus)(nil), (*v1alpha1.FeatureStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_features_FeatureStatus_To_v1alpha1_FeatureStatus(a.(*features.FeatureStatus), b.(*v1alpha1.FeatureStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Feature_To_features_Feature(in *v1alpha1.Feature, out *features.Feature, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_FeatureSpec_To_features_FeatureSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_FeatureStatus_To_features_FeatureStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Feature_To_features_Feature is an autogenerated conversion function.
func Convert_v1alpha1_Feature_To_features_Feature(in *v1alpha1.Feature, out *features.Feature, s conversion.Scope) error {
	return autoConvert_v1alpha1_Feature_To_features_Feature(in, out, s)
}

func autoConvert_features_Feature_To_v1alpha1_Feature(in *features.Feature, out *v1alpha1.Feature, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_features_FeatureSpec_To_v1alpha1_FeatureSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_features_FeatureStatus_To_v1alpha1_FeatureStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_features_Feature_To_v1alpha1_Feature is an autogenerated conversion function.
func Convert_features_Feature_To_v1alpha1_Feature(in *features.Feature, out *v1alpha1.Feature, s conversion.Scope) error {
	return autoConvert_features_Feature_To_v1alpha1_Feature(in, out, s)
}

func autoConvert_v1alpha1_FeatureList_To_features_FeatureList(in *v1alpha1.FeatureList, out *features.FeatureList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]features.Feature, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Feature_To_features_Feature(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_FeatureList_To_features_FeatureList is an autogenerated conversion function.
func Convert_v1alpha1_FeatureList_To_features_FeatureList(in *v1alpha1.FeatureList, out *features.FeatureList, s conversion.Scope) error {
	return autoConvert_v1alpha1_FeatureList_To_features_FeatureList(in, out, s)
}

func autoConvert_features_FeatureList_To_v1alpha1_FeatureList(in *features.FeatureList, out *v1alpha1.FeatureList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha1.Feature, len(*in))
		for i := range *in {
			if err := Convert_features_Feature_To_v1alpha1_Feature(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_features_FeatureList_To_v1alpha1_FeatureList is an autogenerated conversion function.
func Convert_features_FeatureList_To_v1alpha1_FeatureList(in *features.FeatureList, out *v1alpha1.FeatureList, s conversion.Scope) error {
	return autoConvert_features_FeatureList_To_v1alpha1_FeatureList(in, out, s)
}

func autoConvert_v1alpha1_FeatureSpec_To_features_FeatureSpec(in *v1alpha1.FeatureSpec, out *features.FeatureSpec, s conversion.Scope) error {
	out.Desired = (*features.FeatureEnablement)(unsafe.Pointer(in.Desired))
	return nil
}

// Convert_v1alpha1_FeatureSpec_To_features_FeatureSpec is an autogenerated conversion function.
func Convert_v1alpha1_FeatureSpec_To_features_FeatureSpec(in *v1alpha1.FeatureSpec, out *features.FeatureSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_FeatureSpec_To_features_FeatureSpec(in, out, s)
}

func autoConvert_features_FeatureSpec_To_v1alpha1_FeatureSpec(in *features.FeatureSpec, out *v1alpha1.FeatureSpec, s conversion.Scope) error {
	out.Desired = (*v1alpha1.FeatureEnablement)(unsafe.Pointer(in.Desired))
	return nil
}

// Convert_features_FeatureSpec_To_v1alpha1_FeatureSpec is an autogenerated conversion function.
func Convert_features_FeatureSpec_To_v1alpha1_FeatureSpec(in *features.FeatureSpec, out *v1alpha1.FeatureSpec, s conversion.Scope) error {
	return autoConvert_features_FeatureSpec_To_v1alpha1_FeatureSpec(in, out, s)
}

func autoConvert_v1alpha1_FeatureStatus_To_features_FeatureStatus(in *v1alpha1.FeatureStatus, out *features.FeatureStatus, s conversion.Scope) error {
	out.Class = in.Class
	out.Name = in.Name
	out.Stability = features.StabilityLevel(in.Stability)
	// WARNING: in.Version requires manual conversion: does not exist in peer-type
	out.Default = features.FeatureEnablement(in.Default)
	out.State = features.FeatureState(in.State)
	// WARNING: in.Uses requires manual conversion: does not exist in peer-type
	// WARNING: in.UseEvaluationTime requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_features_FeatureStatus_To_v1alpha1_FeatureStatus(in *features.FeatureStatus, out *v1alpha1.FeatureStatus, s conversion.Scope) error {
	out.Class = in.Class
	out.Name = in.Name
	out.Stability = v1alpha1.StabilityLevel(in.Stability)
	out.Default = v1alpha1.FeatureEnablement(in.Default)
	out.State = v1alpha1.FeatureState(in.State)
	return nil
}

// Convert_features_FeatureStatus_To_v1alpha1_FeatureStatus is an autogenerated conversion function.
func Convert_features_FeatureStatus_To_v1alpha1_FeatureStatus(in *features.FeatureStatus, out *v1alpha1.FeatureStatus, s conversion.Scope) error {
	return autoConvert_features_FeatureStatus_To_v1alpha1_FeatureStatus(in, out, s)
}
